<?php
/**
 * @file
 * Code for the Roles and permissions feature.
 */

include_once 'roles_and_permissions.features.inc';

/**
 * Constant for the name of 'valitsuse tasemel administraator' roll
 */
define('ROLE_VALITSUS', 'valitsuse tasemel administraator');

/**
 * Constant for the name of 'ministeeriumi administraator' roll
 */
define('ROLE_MINISTEERIUM', 'ministeeriumi administraator');

/**
 * Constant for the name of 'allasutuse administraator' roll
 */
define('ROLE_ALLASUTUS', 'allasutuse administraator');

/**
 * Implements hook_permission().
 *
 * Define custom permissions for Teenus content type. Ministry administrator
 * can change all ministries institutions and their services. Institution
 * administrator should be able to change only his institution and institutions
 * services.
 */
function roles_and_permissions_permission() {
  return array(
    'edit own ministries content' => array(
      'title' => t('Teenus: Edit own ministries content'),
      'description' => t('Ministeeriumi administraator saab muuta kõikide ministeeriumi allaasutuste teenuseid, vastava asutuse'),
    ),
    'edit own institutions content' => array(
      'title' => t('Teenus: Edit own institutions content'),
      'description' => t('Allasutuse administraator saab muuta ainult asutuse alla kuuluvad teenused'),
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function roles_and_permissions_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register_form' || $form_id == 'user_profile_form') {
    global $user;
    // Add custom validation callback function.
    $form['#validate'][] = '_roles_and_permissions_validate_user';
    // Allow only admin and government administrator to change institution.
    $form['field_u_asutus']['#access']
      = array_search(ROLE_VALITSUS, $user->roles) || array_search(ROLE_MINISTEERIUM, $user->roles);
  }
}

/**
 * User register form's validation additional callback function.
 *
 * Validates if corresponding institution / ministry is selected for new user.
 * - User with 'Valitsuse tasemel administraator' roll might not have any
 * institution / ministry selected.
 * - User with 'Ministeeriumi administraator' roll should have at list ministry
 * to be selected.
 * - User with 'Allasutuse administraator' should have both ministry and
 * institution being selected.
 *
 * @param array $form
 *   form array
 * @param array $form_state
 *   form state array
 */
function _roles_and_permissions_validate_user($form, &$form_state) {
  // Selected ministry or institution tid.
  $selected_service_tid
    = isset($form_state['input']['field_u_asutus']) ? $form_state['input']['field_u_asutus']['und'][0]['tid'] : NULL;
  $service_term = taxonomy_term_load($selected_service_tid);
  $service_term_parent = taxonomy_get_parents($selected_service_tid);

  // Selected user roles ids.
  $selected_roles_names = array();
  $selected_roles_ids = array_values($form_state['input']['roles']);

  if (is_array($selected_roles_ids)) {
    // Get selected roles names to compare with defined constants.
    foreach ($selected_roles_ids as $rid) {
      if ($role = user_role_load($rid)) {
        $selected_roles_names[] = $role->name;
      }
    }

    // At least one role should be always selected.
    if (!empty($selected_roles_names) && count($selected_roles_names) == 1) {
      // Ministry should be selected for ROLE_MINISTEERIUM role.
      if (array_search(ROLE_MINISTEERIUM, $selected_roles_names) !== FALSE
        && !$service_term
      ) {
        form_set_error('field_u_asutus', t('Ministeeriumi administraatoril peab vahemalt vastav ministeerium olema valitud.'));
      }
      // Institution should be selected for ROLE_ALLASUTUS role.
      elseif (array_search(ROLE_ALLASUTUS, $selected_roles_names) !== FALSE
        && ($service_term && empty($service_term_parent) || !$service_term)
      ) {
        form_set_error('field_u_asutus', t('Allasutuse administraatoril peab vastav allasutus olema valitud.'));
      }
      // Maybe some additional actions will be added here in the feature.
      elseif (array_search(ROLE_VALITSUS, $selected_roles_names)) {
        // Nothing to do here for now. Ministry or institution might not be
        // selected.
      }
    }
    else {
      form_set_error('roles', t('Üks roll peab olema valitud.'));
    }
  }
  else {
    form_set_error('roles', t('Vigane rollide massiiv.'));
  }
}

